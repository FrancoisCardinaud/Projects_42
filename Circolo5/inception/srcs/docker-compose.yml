volumes:
  mariadb_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /home/${USER_LOGIN}/data/mariadb

  wordpress_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /home/${USER_LOGIN}/data/wordpress


services:
  mariadb:
    container_name: mariadb
    image: mariadb
    build:
      context: ./requirements/mariadb
      dockerfile: Dockerfile
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      WP_DATABASE: ${WP_DATABASE}
    volumes:
      - mariadb_data:/var/lib/mysql
    networks:
      - my-network
    restart: unless-stopped

  wordpress:
    container_name: wordpress
    image: wordpress
    ports:
      - "9000:9000"
    build:
      context: ./requirements/wordpress
      dockerfile: Dockerfile
    environment:
      WP_HOST: ${WP_HOST}
      WP_USER: ${WP_USER}
      WP_USER_PASSWORD: ${WP_USER_PASSWORD}
      WP_DATABASE: ${WP_DATABASE}
    volumes:
      - wordpress_data:/var/www/html
      - ./data/wordpress/wp-config.php:/var/www/html/wordpress/wp-config.php
    env_file: .env
    networks:
      - my-network
    depends_on:
      - mariadb
    restart: unless-stopped

  nginx:
    container_name: nginx
    image: nginx
    build:
      context: ./requirements/nginx
      dockerfile: Dockerfile
    ports:
      - "443:443"
    volumes:
      - /home/${USER_LOGIN}/data/wordpress:/var/www/html:ro
    networks:
      - my-network
    depends_on:
      - wordpress
      - mariadb
    restart: unless-stopped

networks:
  my-network:
